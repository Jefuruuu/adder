package adder31plus

import (
	"testing"
)

type DataSet struct {
	val1 string
	val2 string
	ans string
}

func TestAdder(t *testing.T) {
	TestData := []DataSet{
		{"00001230000000", "000004560000000", "5790000000"},
		{"-0000001230000000", "-00004560000000", "-5790000000"},
		{"000009990000000", "0000010000000", "10000000000"},
		{"-009990000000", "-0010000000", "-10000000000"},
		{"000000010000000", "9990000000", "10000000000"},
		{"-10000000", "-0000009990000000", "-10000000000"},
		{"33", "-000000044", "-11"},   
		{"-44", "0000033", "-11"},
		{"000000000", "-90000000", "-90000000"},
		{"-0000009", "0", "-9"},
		{"9", "-000000010", "-1"},
		{"-10", "9", "-1"},
		{"-98", "000000009", "-89"},
		{"9", "-000000098", "-89"},
		{"000000123", "-456", "-333"},
		{"-456", "000123", "-333"},
		{"123", "-0000004567", "-4444"},
		{"-4567", "123", "-4444"},
		{"99900000", "-45600000", "54300000"},
		{"-456", "000000999", "543"},
		{"999999", "-1000000", "-1"},
		{"-1000000", "999999", "-1"},
		{"01","000000002", "3"},
		{"-00000001", "02", "1"},
		{"+1","-00000001","0"},
		{"00000000", "-000000", "0"},
		{"-0", "0", "0"},
	}

	for _, data := range TestData {
		ans := Adder(data.val1, data.val2)
		expected := data.ans
		if ans != expected {
			t.Fatalf("Expect %s + %s to be %s, but got %s",data.val1,data.val2, expected, ans)
		}
	}
}